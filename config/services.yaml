# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
          $queryBus: '@tactician.commandbus.query'
          $commandBus: '@tactician.commandbus.command'
          $eventBus: '@tactician.commandbus.event'
          $asyncEventBus: '@tactician.commandbus.asyncEvent'

          $eventStore: '@Broadway\EventStore\Dbal\DBALEventStore'
          $broadwayBusBridge: '@App\Infrastructure\Share\Bus\CommandBusBroadwayAdapter'
          $eventProducer: '@old_sound_rabbit_mq.events_producer'
          
    _instanceof:

        App\Application\Command\CommandHandlerInterface:
          public: true
          tags:
              - { name: tactician.handler, typehints: true, bus: command }

        App\Application\Query\QueryHandlerInterface:
          public: true
          tags:
              - { name: tactician.handler, typehints: true, bus: query }

        App\Infrastructure\Share\Event\Publisher\EventPublisher:
          public: true
          tags:
              - { name: tactician.handler, typehints: true, bus: event }

        Broadway\ReadModel\Projector:
          public: true
          tags:
              - { name: tactician.handler, typehints: true, bus: asyncEvent }

    App\:
        resource: '../src/*'
        exclude: '../src/**/{Migrations,EventSubscriber}'

    App\UI\Cli\Command\:
        resource: '../src/UI/Cli/Command'

    App\UI\Http\Rest\Controller\:
        resource: '../src/UI/Http/Rest/Controller/*'
        tags: [ 'controller.service_arguments' ]

    Broadway\EventStore\Dbal\DBALEventStore:
        public: true
        arguments:
          - '@doctrine.dbal.default_connection'
          - '@broadway.serializer.payload'
          - '@broadway.serializer.metadata'
          - 'events'
          - 'false'
          - '@broadway.uuid.converter'

    App\UI\Http\Rest\EventSubscriber\ExceptionSubscriber:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    App\UI\Http\Rest\EventSubscriber\JsonBodyParserSubscriber:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 100 }